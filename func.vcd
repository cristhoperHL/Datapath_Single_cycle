$date
	Wed Mar 25 12:16:48 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module datapath $end
$var wire 32 ! pc [31:0] $end
$var wire 32 " instruction [31:0] $end
$var wire 32 # d [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module APC $end
$var wire 32 & pc [31:0] $end
$var reg 32 ' pc_end [31:0] $end
$upscope $end
$scope module IM $end
$var wire 32 ( pc [31:0] $end
$var reg 32 ) out [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 $ clk $end
$var wire 32 * d [31:0] $end
$var wire 1 % reset $end
$var reg 32 + q [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b100 *
b100 )
b0 (
b100 '
b0 &
1%
1$
b100 #
b100 "
b0 !
$end
#1
0%
0$
#2
b1 "
b1 )
b1000 #
b1000 '
b1000 *
b100 !
b100 &
b100 (
b100 +
1$
#3
0$
#4
b100000 "
b100000 )
b1100 #
b1100 '
b1100 *
b1000 !
b1000 &
b1000 (
b1000 +
1$
#5
0$
#6
b1000 "
b1000 )
b10000 #
b10000 '
b10000 *
b1100 !
b1100 &
b1100 (
b1100 +
1$
#7
0$
#8
b10 "
b10 )
b10100 #
b10100 '
b10100 *
b10000 !
b10000 &
b10000 (
b10000 +
1$
#9
0$
#10
b1000000 "
b1000000 )
b11000 #
b11000 '
b11000 *
b10100 !
b10100 &
b10100 (
b10100 +
1$
#11
0$
#12
b10000 "
b10000 )
b11100 #
b11100 '
b11100 *
b11000 !
b11000 &
b11000 (
b11000 +
1$
#13
0$
#14
b100 "
b100 )
b100000 #
b100000 '
b100000 *
b11100 !
b11100 &
b11100 (
b11100 +
1$
